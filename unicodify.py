import sublime_plugin
import random


def unicodify(string):
    result = []

    mapping = {
        "A": ["À", "Á", "Â", "Ã", "Ä", "Å", "Ａ", "Ɑ", ],
        "B": ["Ｂ", "Ƃ", "Ƅ", ],
        "C": ["Ｃ", ],
        "D": ["Ꮷ", "Ｄ", "Ԁ", ],
        "E": ["È", "É", "Ê", "Ë", "Ｅ", ],
        "F": ["Ｆ", ],
        "G": ["Ｇ", "Ǥ", "ɢ", ],
        "H": ["Ｈ", ],
        "I": ["Ì", "Í", "Ï", "Ｉ", ],
        "J": ["Ｊ", "ϳ", "Յ", ],
        "K": ["Ｋ", "Ƙ", ],
        "L": ["Ｌ", "ɭ", ],
        "M": ["Ｍ", "Ϻ", ],
        "N": ["Ｎ", ],
        "O": ["Ò", "Ｏ", ],
        "P": ["Ｐ", "Ρ", ],
        "Q": ["Ｑ", "Ɋ", ],
        "R": ["Ｒ", ],
        "S": ["Ｓ", "Ѕ", ],
        "T": ["Ｔ", ],
        "U": ["Ù", "Ú", "Û", "Ü", "Ｕ", ],
        "V": ["Ｖ", "Ѵ", ],
        "W": ["Ｗ", "Ɯ", "ɰ", ],
        "X": ["Ｘ", "Х", "х", "Ӽ", ],
        "Y": ["Ｙ", "ϒ", ],
        "Z": ["Ｚ", "Ȥ", "Ƶ", ],
        "a": ["à", "á", "â", "ã", "ä", "å", "ａ", "ɑ", ],
        "b": ["ｂ", "ƃ", "ƅ", ],
        "c": ["ｃ", ],
        "d": ["Ꮷ", "ｄ", "ԁ", ],
        "e": ["è", "é", "ê", "ë", "ｅ", ],
        "f": ["ｆ", ],
        "g": ["ｇ", "ǥ", "ɢ", ],
        "h": ["ｈ", "ɦ", ],
        "i": ["ì", "í", "ï", "ｉ", ],
        "j": ["ｊ", "ϳ", "յ", ],
        "k": ["ｋ", "ƙ", ],
        "l": ["ｌ", "ɭ", ],
        "m": ["ｍ", "ϻ", ],
        "n": ["ｎ", ],
        "o": ["ò", "ｏ", ],
        "p": ["ｐ", "ρ", ],
        "q": ["ｑ", "ɋ", ],
        "r": ["ｒ", ],
        "s": ["ｓ", "ѕ", ],
        "t": ["ｔ", ],
        "u": ["ù", "ú", "û", "ü", "ｕ", ],
        "v": ["ｖ", "ѵ", ],
        "w": ["ｗ", "ɯ", "ɰ", ],
        "x": ["ｘ", "х", "Х", "ӽ", ],
        "y": ["ｙ", "ϒ", ],
        "z": ["ｚ", "ȥ", "ƶ", ],
    }

    for character in string:
        if character in mapping:
            character = random.choice(mapping[character])
        result.append(character)

    return "".join(result)


class UnicodifyCommand(sublime_plugin.TextCommand):
    def run(self, edit):
        for selection in self.view.sel():
            string = self.view.substr(selection)
            self.view.replace(edit, selection, unicodify(string))
